From 586fb661238736ab18139507c000bfb34e61be67 Mon Sep 17 00:00:00 2001
From: undefined <undefined@undefined.undefined>
Date: Thu, 19 Dec 2024 00:00:00 +0000
Subject: [PATCH 1/1] extend password support

---
 SevenZipExtractor/ArchiveFile.cs         | 19 +++++++++-------
 SevenZipExtractor/ArchiveOpenCallback.cs | 28 ++++++++++++++++++++++++
 2 files changed, 39 insertions(+), 8 deletions(-)
 create mode 100644 SevenZipExtractor/ArchiveOpenCallback.cs

diff --git a/SevenZipExtractor/ArchiveFile.cs b/SevenZipExtractor/ArchiveFile.cs
index 17a3dcb..81cf9b9 100644
--- a/SevenZipExtractor/ArchiveFile.cs
+++ b/SevenZipExtractor/ArchiveFile.cs
@@ -17,8 +17,11 @@ namespace SevenZipExtractor
 
         public SevenZipFormat Format { get; private set; }
 
-        public ArchiveFile(string archiveFilePath, string libraryFilePath = null)
+        public string Password { get; }
+
+        public ArchiveFile(string archiveFilePath, string password = null, string libraryFilePath = null)
         {
+            this.Password = password;
             this.libraryFilePath = libraryFilePath;
 
             this.InitializeAndValidateLibrary();
@@ -51,8 +54,9 @@ namespace SevenZipExtractor
             this.archiveStream = new InStreamWrapper(File.OpenRead(archiveFilePath));
         }
 
-        public ArchiveFile(Stream archiveStream, SevenZipFormat? format = null, string libraryFilePath = null)
+        public ArchiveFile(Stream archiveStream, SevenZipFormat? format = null, string password = null, string libraryFilePath = null)
         {
+            this.Password = password;
             this.libraryFilePath = libraryFilePath;
 
             this.InitializeAndValidateLibrary();
@@ -83,7 +87,7 @@ namespace SevenZipExtractor
         }
 
 
-        public void Extract(string outputFolder, bool overwrite = false, string password = null)
+        public void Extract(string outputFolder, bool overwrite = false)
         {
             this.Extract(entry =>
             {
@@ -100,11 +104,10 @@ namespace SevenZipExtractor
                 }
 
                 return null;
-            },
-            password);
+            });
         }
 
-        public void Extract(Func<Entry, string> getOutputPath, string password = null)
+        public void Extract(Func<Entry, string> getOutputPath)
         {
             IList<Stream> fileStreams = new List<Stream>();
 
@@ -137,7 +140,7 @@ namespace SevenZipExtractor
                     fileStreams.Add(File.Create(outputPath));
                 }
 
-                this.archive.Extract(null, 0xFFFFFFFF, 0, new ArchiveStreamsCallback(fileStreams, password));
+                this.archive.Extract(null, 0xFFFFFFFF, 0, new ArchiveStreamsCallback(fileStreams, this.Password));
             }
             finally
             {
@@ -161,7 +164,7 @@ namespace SevenZipExtractor
                 }
 
                 ulong checkPos = 32 * 1024;
-                int open = this.archive.Open(this.archiveStream, ref checkPos, null);
+                int open = this.archive.Open(this.archiveStream, ref checkPos, new ArchiveOpenCallback(this.Password));
 
                 if (open != 0)
                 {
diff --git a/SevenZipExtractor/ArchiveOpenCallback.cs b/SevenZipExtractor/ArchiveOpenCallback.cs
new file mode 100644
index 0000000..917221a
--- /dev/null
+++ b/SevenZipExtractor/ArchiveOpenCallback.cs
@@ -0,0 +1,28 @@
+using System;
+
+namespace SevenZipExtractor
+{
+    internal class ArchiveOpenCallback : IArchiveOpenCallback, ICryptoGetTextPassword
+    {
+        public string Password { get; }
+
+        public ArchiveOpenCallback(string password = null)
+        {
+            Password = password ?? "";
+        }
+
+        public void SetTotal(IntPtr files, IntPtr bytes)
+        {
+        }
+
+        public void SetCompleted(IntPtr files, IntPtr bytes)
+        {
+        }
+
+        public int CryptoGetTextPassword(out string password)
+        {
+            password = this.Password;
+            return 0;
+        }
+    }
+}
\ No newline at end of file
-- 
2.47.0.windows.2

